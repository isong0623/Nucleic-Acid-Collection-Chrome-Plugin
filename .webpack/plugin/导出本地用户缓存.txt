window.openDatabase("local_user_info","1.0","HSCJ.LocalUserInfo",100*1024*1024).transaction(t=>{
    t.executeSql("SELECT * FROM sampling_record",[],(t,rs)=>{
        const workbook = XLSX.utils.book_new();
        const worksheet = XLSX.utils.json_to_sheet([]);
        worksheet["!cols"] = [ { wch: 6 },{ wch: 18 },{ wch: 11 } ];
        const title = ["姓名", "身份号", "手机号"];
        XLSX.utils.sheet_add_aoa(worksheet, [title], { origin: "A1" });
        worksheet["!cols"] = worksheet["!cols"].map((width,index,arr)=>{
            try{ return { wch:Math.max(width.wch,title[index].length)}; }
            catch(e){ return {wch:10}; }
        });
        XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");

        const results =rs.rows;
        for(let i=0,ni=results.length;i<ni;++i){
            const data = results[i];
            const fullName = data.fullName;
            const idCard   = data.idCard;
            const mobile   = data.mobile;

            const rowInfo  = worksheet["!ref"];
            const rowCount = parseInt(rowInfo.substr(rowInfo.search(":")+2))+1;
            const row      = [fullName, idCard, mobile];

            worksheet["!cols"] = worksheet["!cols"].map((width,index,arr)=>{
                try{return {wch:Math.max(width.wch,row[index].length)};} catch(e){return {wch:10};}
            });

            XLSX.utils.sheet_add_aoa(worksheet, [row], { origin: "A"+rowCount});
        }

        XLSX.writeFile(workbook, "本地缓存记录.xls");
    })
})